From 7350ce9b5e74ab23c174d80370c03f288cd12aeb Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Patrick=20Sodr=C3=A9?= <psodre@gmail.com>
Date: Fri, 24 Apr 2020 23:16:36 -0400
Subject: [PATCH] Use GOROOT, GOPATH, CGO_FLAGS, GOBIN, GOEXE

  - All these variables are already set in conda-forge
---
 build.sh     | 12 ++------
 set_goenv.sh | 78 ++++++++--------------------------------------------
 2 files changed, 14 insertions(+), 76 deletions(-)

diff --git a/build.sh b/build.sh
index edc8a5ea..0d96866e 100755
--- a/build.sh
+++ b/build.sh
@@ -13,13 +13,7 @@ cd $SCRIPT_DIR
 . ./set_goenv.sh
 set_goenv || exit
 
-BINARY_EXT=""
-UNAME_S=$(PATH="/usr/bin:/bin" uname -s)
-    case ${UNAME_S} in
-        CYGWIN*)
-            BINARY_EXT=".exe"
-        ;;
-    esac
+# conda-forge: GOEXE already exist!
 
 # remove stale packages
 rm -rf vendor/pkg
@@ -29,8 +23,8 @@ mkdir -p bin
 ec=0
 for i in bsondump mongostat mongofiles mongoexport mongoimport mongorestore mongodump mongotop; do
         echo "Building ${i}..."
-        go build -o "bin/$i$BINARY_EXT" $(buildflags) -ldflags "$(print_ldflags)" -tags "$(print_tags $tags)" "$i/main/$i.go" || { echo "Error building $i"; ec=1; break; }
-        ./bin/${i}${BINARY_EXT} --version | head -1
+        go install $(buildflags) -ldflags "$(print_ldflags)" -tags "$(print_tags $tags)" "$i/main/$i.go" || { echo "Error building $i"; ec=1; break; }
+        $(go env GOBIN)/${i}$(go env GOEXE) --version | head -1
 done
 
 if [ -t /dev/stdin ]; then
diff --git a/set_goenv.sh b/set_goenv.sh
index 7623fe10..8f08d6b8 100755
--- a/set_goenv.sh
+++ b/set_goenv.sh
@@ -7,84 +7,28 @@ set_goenv() {
         return 1
     fi
 
-    # Set OS-level default Go configuration
-    UNAME_S=$(PATH="/usr/bin:/bin" uname -s)
-    case $UNAME_S in
-        CYGWIN*)
-            PREF_GOROOT="c:/golang/go1.12"
-            PREF_PATH="/cygdrive/c/golang/go1.12/bin:/cygdrive/c/mingw-w64/x86_64-4.9.1-posix-seh-rt_v3-rev1/mingw64/bin:$PATH"
-        ;;
-        *)
-            PREF_GOROOT="/opt/golang/go1.12"
-            # XXX might not need mongodbtoolchain anymore
-            PREF_PATH="$PREF_GOROOT/bin:/opt/mongodbtoolchain/v3/bin/:$PATH"
-        ;;
-    esac
+    # conda-forge: GOROOT is set by go package
 
-    # Set OS-level compilation flags
-    case $UNAME_S in
-        CYGWIN*)
-            export CGO_CFLAGS="-D_WIN32_WINNT=0x0601 -DNTDDI_VERSION=0x06010000"
-            export GOCACHE="C:/windows/temp"
-            ;;
-        Darwin)
-            export CGO_CFLAGS="-mmacosx-version-min=10.11"
-            export CGO_LDFLAGS="-mmacosx-version-min=10.11"
-            ;;
-    esac
+    # conda-forge: CGO_*FLAGS set by go-cgo package
 
-    # XXX Setting the compiler might not be necessary anymore now that we're
-    # using standard Go toolchain and if we don't put mongodbtoolchain into the
-    # path.  But if we need to keep mongodbtoolchain for other tools (eg. python),
-    # then this is probably still necessary to find the right gcc.
-    if [ -z "$CC" ]; then
-        UNAME_M=$(PATH="/usr/bin:/bin" uname -m)
-        case $UNAME_M in
-            aarch64)
-                export CC=/opt/mongodbtoolchain/v3/bin/aarch64-mongodb-linux-gcc
-            ;;
-            ppc64le)
-                export CC=/opt/mongodbtoolchain/v3/bin/ppc64le-mongodb-linux-gcc
-            ;;
-            s390x)
-                export CC=/opt/mongodbtoolchain/v3/bin/s390x-mongodb-linux-gcc
-            ;;
-            *)
-                # Not needed for other architectures
-            ;;
-        esac
-    fi
+    # conda-forge: CC set by 'c' compiler package
 
-    # If GOROOT is not set by the user, configure our preferred Go version and
-    # associated path if available or error.
+    # conda-forge: If GOROOT is not set then we're not running under conda
     if [ -z "$GOROOT" ]; then
-        if [ -d "$PREF_GOROOT" ]; then
-            export GOROOT="$PREF_GOROOT";
-            export PATH="$PREF_PATH";
-        else
-            echo "GOROOT not set and preferred GOROOT '$PREF_GOROOT' doesn't exist. Aborting."
-            return 1
-        fi
-    fi
-
-    # Derive GOPATH from current directory, but error if the current directory
-    # doesn't look like a GOPATH structure.
-    if expr "$(pwd)" : '.*src/github.com/mongodb/mongo-tools$' > /dev/null; then
-        export GOPATH=$(echo $(pwd) | perl -pe 's{src/github.com/mongodb/mongo-tools}{}')
-        if expr "$UNAME_S" : 'CYGWIN' > /dev/null; then
-            export GOPATH=$(cygpath -w "$GOPATH")
-        fi
-    else
-        echo "Current path '$(pwd)' doesn't resemble a GOPATH-style path. Aborting.";
+        echo "GOROOT not set, are you sure you are running under conda-buil? Aborting."
         return 1
     fi
 
+    # conda-forge: GOPATH is already set by go package
+
     return
 }
 
 print_ldflags() {
-    VersionStr="$(go run release/release.go get-version)"
-    GitCommit="$(git rev-parse HEAD)"
+    # conda-forge: Uset PKG_VERSION
+    VersionStr="${PKG_VERSION}"
+    # conda-forge: We don't use GitCommits
+    GitCommit=""
     importpath="main"
     echo "-X ${importpath}.VersionStr=${VersionStr} -X ${importpath}.GitCommit=${GitCommit}"
 }
-- 
2.26.2

